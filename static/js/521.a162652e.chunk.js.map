{"version":3,"file":"static/js/521.a162652e.chunk.js","mappings":"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","sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../webpack/runtime/get javascript chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","searchWorkerManager.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"b8e109a7\" + \".chunk.js\";\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/poke-corpus/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t521: 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","import corpus from './i18n/corpus.json'\r\nimport { SearchParams, SearchTask, SearchTaskResult, SearchTaskResultError } from './searchWorker';\r\n\r\nexport type SearchResultsInProgress = 'loading' | 'processing' | 'collecting';\r\nexport type SearchResultsComplete = 'done' | SearchTaskResultError;\r\nexport type SearchResultsStatus = SearchResultsInProgress | SearchResultsComplete;\r\n\r\nexport interface SearchResults {\r\n  complete: boolean,\r\n  status: SearchResultsStatus,\r\n  progress: number,\r\n  resultsLanguages: string[][],\r\n  results: [string, string, string[][], boolean][]\r\n};\r\n\r\n/* eslint-disable no-restricted-globals */\r\nself.onmessage = (message: MessageEvent<SearchParams>) => {\r\n  const progressPortionLoading = 0.49;\r\n  const progressPortionProcessing = 0.49;\r\n  const progressPortionCollecting = 0.01; // 0.01 for rendering\r\n\r\n  const updateStatusInProgress = (status: SearchResultsInProgress, loadingProgress: number, processingProgress: number, collectingProgress: number) => {\r\n    const progress = loadingProgress * progressPortionLoading + processingProgress * progressPortionProcessing + collectingProgress * progressPortionCollecting;\r\n    const message: SearchResults = {\r\n      complete: false,\r\n      status: status,\r\n      progress: progress,\r\n      resultsLanguages: [],\r\n      results: []\r\n    };\r\n    postMessage(message);\r\n  };\r\n\r\n  const updateStatusComplete = (status: SearchResultsComplete, resultsLanguages: string[][] = [], results: [string, string, string[][], boolean][] = []) => {\r\n    const message: SearchResults = {\r\n      complete: true,\r\n      status: status,\r\n      progress: 1.0,\r\n      resultsLanguages: resultsLanguages,\r\n      results: results\r\n    };\r\n    postMessage(message);\r\n  };\r\n\r\n  try {\r\n    const params = message.data;\r\n    updateStatusInProgress('loading', 0, 0, 0);\r\n\r\n    // Load files\r\n    let taskCount = 0;\r\n    const taskList: SearchTask[] = [];\r\n    Object.keys(corpus.collections).filter((collectionKey) => params.collections.includes(collectionKey)).forEach((collectionKey) => {\r\n      const collection = corpus.collections[collectionKey as keyof typeof corpus.collections];\r\n\r\n      // Do not process collection if it does not include any language being searched\r\n      if (params.languages.every((languageKey) => !collection.languages.includes(languageKey))) {\r\n        return;\r\n      }\r\n\r\n      // Load all files in all languages in the collection\r\n      collection.files\r\n      .filter((fileKey) => !((fileKey === 'common' && !params.common) || (fileKey === 'script' && !params.script)))\r\n      .forEach((fileKey) => {\r\n        const languages = collection.structured ? collection.languages : collection.languages.filter((languageKey) => params.languages.includes(languageKey));\r\n        if (!collection.structured) {\r\n          languages.forEach((languageKey) => {\r\n            taskList.push({\r\n              index: taskCount,\r\n              params: params,\r\n              collectionKey: collectionKey,\r\n              fileKey: fileKey,\r\n              languages: [languageKey]\r\n            });\r\n          });\r\n        }\r\n        else {\r\n          taskList.push({\r\n            index: taskCount,\r\n            params: params,\r\n            collectionKey: collectionKey,\r\n            fileKey: fileKey,\r\n            languages: languages\r\n          });\r\n        }\r\n        taskCount += languages.length;\r\n      });\r\n    });\r\n\r\n    // Initialize helpers\r\n    let loadedCount = 0;\r\n    let processedCount = 0;\r\n    let collectedCount = 0;\r\n    const taskResults: SearchTaskResult[] = [];\r\n    const helpers: Worker[] = [];\r\n    const helperOnMessage = (e: MessageEvent<SearchTaskResult>) => {\r\n      const result = e.data;\r\n      if (result.status === 'loading') {\r\n        loadedCount++;\r\n        updateStatusInProgress('loading', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.log(`Loaded ${loadedCount}/${taskCount}`);\r\n        }\r\n      }\r\n      else if (result.status === 'processing') {\r\n        processedCount++;\r\n        updateStatusInProgress('processing', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.log(`Processed ${processedCount}/${taskCount}`);\r\n        }\r\n      }\r\n      else if (result.status === 'done') {\r\n        taskResults.push(result);\r\n        collectedCount++;\r\n        updateStatusInProgress('collecting', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.log(`Collected ${collectedCount}/${taskList.length}`);\r\n        }\r\n\r\n        // Send results\r\n        if (collectedCount === taskList.length) {\r\n          const resultsLanguages: string[][] = [];\r\n          const results: [string, string, string[][], boolean][] = [];\r\n          taskResults.sort((a, b) => a.index - b.index);\r\n          let lastCollectionKey = '';\r\n          let lastFileKey = '';\r\n          taskResults.forEach((taskResult) => {\r\n            if (taskResult.resultLanguages !== undefined && taskResult.result !== undefined) {\r\n              const [collectionKey, fileKey, fileResults] = taskResult.result;\r\n              const displayHeader = collectionKey !== lastCollectionKey || fileKey !== lastFileKey;\r\n              resultsLanguages.push(taskResult.resultLanguages);\r\n              results.push([collectionKey, fileKey, fileResults, displayHeader]);\r\n              lastCollectionKey = collectionKey;\r\n              lastFileKey = fileKey;\r\n            }\r\n          });\r\n\r\n          updateStatusComplete('done', resultsLanguages, results);\r\n          helpers.forEach((helper) => helper.terminate());\r\n        }\r\n      }\r\n      else { // error\r\n        updateStatusComplete(result.status);\r\n        helpers.forEach((helper) => helper.terminate());\r\n      }\r\n    }\r\n\r\n    // Start helpers\r\n    const numWorkers = Math.max(1, Math.min(taskList.length, (navigator.hardwareConcurrency || 4) - 2));\r\n    for (let i = 0; i < numWorkers; i++) {\r\n      const helper = new Worker(new URL(\"./searchWorker.ts\", import.meta.url));\r\n      helper.onmessage = helperOnMessage;\r\n      helpers.push(helper);\r\n    }\r\n    taskList.forEach((task, i) => {\r\n      helpers[i % helpers.length].postMessage(task);\r\n    });\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n    updateStatusComplete('error');\r\n  }\r\n};\r\n"],"names":["__webpack_require__","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","err","o","minLen","n","prototype","toString","slice","constructor","name","from","test","TypeError","m","u","chunkId","obj","prop","hasOwnProperty","p","b","self","location","onmessage","message","updateStatusInProgress","status","loadingProgress","processingProgress","collectingProgress","postMessage","complete","progress","resultsLanguages","results","updateStatusComplete","arguments","undefined","params","data","taskCount","taskList","keys","corpus","filter","collectionKey","collections","includes","forEach","collection","languages","every","languageKey","files","fileKey","common","script","structured","index","loadedCount","processedCount","collectedCount","taskResults","helpers","helperOnMessage","e","result","sort","a","lastCollectionKey","lastFileKey","taskResult","resultLanguages","_taskResult$result","fileResults","displayHeader","helper","terminate","numWorkers","Math","max","min","navigator","hardwareConcurrency","Worker","URL","task","console","error"],"sourceRoot":""}