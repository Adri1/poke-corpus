{"version":3,"file":"static/js/287.62a6ef59.chunk.js","mappings":"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","sources":["webWorker/cleanString.ts","webWorker/corpus.ts","webWorker/searchWorker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["/**\r\n * Various string handling functions.\r\n *\r\n * Note that the following codepoints are used internally, and may produce unexpected output if present in input text:\r\n * - U+F0000: delimiter for copy of string with ruby text converted to kanji\r\n * - U+F0001: delimiter for copy of string with ruby text converted to kana\r\n *\r\n * - U+F0100: placeholder for literal backslash `\\\\`\r\n * - U+F0102: placeholder for literal left square bracket `\\[`\r\n * - U+F0104: placeholder for literal left curly bracket `\\{`\r\n * - U+F0106: placeholder for less-than sign `<`\r\n * - U+F0107: placeholder for greater-than sign `>`\r\n *\r\n * - U+F0200: placeholder for tab `\\n`\r\n * - U+F0201: placeholder for tab `\\r`\r\n * - U+F0202: placeholder for tab `\\c`\r\n * - U+F0203: placeholder for tab `\\t`\r\n * - U+F0207: placeholder for `[VAR 0207]`\r\n * - U+F0208: placeholder for `[VAR 0208]`\r\n *\r\n * The following codepoints can be used in source documents for multivalued strings:\r\n * - U+F1000: delimiter between multivalued strings\r\n * - U+F1001: delimiter between the discriminator and the string itself\r\n * - U+F1100: delimiter between speaker ID and speaker name\r\n * - U+F1101: delimiter between speaker name and dialogue\r\n */\r\n\r\nimport chineseChars from './chineseChars.json';\r\n\r\n// SMUSUM Chinese Pokémon names\r\nfunction remapChineseChars(s: string) {\r\n  return s.search(/[\\uE800-\\uEE26]/u) === -1 ? s : (\r\n    Array.from(s).map((c) => {\r\n      const codePoint = c.codePointAt(0);\r\n      return (codePoint !== undefined && codePoint >= 0xE800 && codePoint <= 0xEE26) ? chineseChars[codePoint - 0xE800] : c;\r\n    }).join('')\r\n  );\r\n}\r\n\r\n// ORAS Korean Braille\r\nfunction remapKoreanBraille(s: string) {\r\n  return s.search(/[\\u1100-\\u11FF\\uE0C0-\\uE0C7]/u) === -1 ? s : (s\r\n    .replaceAll('\\uE0C0', '그래서') // geuraeseo\r\n    .replaceAll('\\uE0C1', '그러나') // geureona\r\n    .replaceAll('\\uE0C2', '그러면') // geureomyeon\r\n    .replaceAll('\\uE0C3', '그러므로') // geureomeuro\r\n    .replaceAll('\\uE0C4', '그런데') // geureonde\r\n    .replaceAll('\\uE0C5', '그') // UNUSED go\r\n    .replaceAll('\\uE0C6', '그리하여') // geurihayeo\r\n    .replaceAll('ᆨᅩ', '그리고') // geurigeo\r\n    .replaceAll('\\uE0C7ᄉ', 'ᄊ') // ss\r\n    .replaceAll('\\uE0C7ᄀ', 'ᄁ') // kk\r\n    .replaceAll('\\uE0C7ᄃ', 'ᄄ') // tt\r\n    .replaceAll('\\uE0C7ᄇ', 'ᄈ') // pp\r\n    .replaceAll('\\uE0C7ᄌ', 'ᄍ') // jj\r\n    .replaceAll('\\uE0C7', 'ᄉ') // unmatched double consonant\r\n    .replaceAll(/([\\u1100-\\u115F])([억옹울옥연운온언얼열인영을은])/gu, (_, initial: string, syllable: string) => initial + syllable.normalize(\"NFD\").substring(1)) // combine initial with abbreviations\r\n    .replaceAll(/([가나다마바사자카타파하])([\\u11A8-\\u11FF])/gu, (_, syllable: string, final: string) => syllable.normalize(\"NFD\") + final) // combine abbreviations with final\r\n    .replaceAll(/^[\\u1160-\\u1175]+$/gum, (match) => '\\u115F' + match.split('').join('\\u115F')) // filler for unmatched vowels in strings of unmatched vowels\r\n    .replaceAll(/(?<![\\u1100-\\u115F])([\\u1160-\\u1175])/gu, 'ᄋ$1') // add null initial to all other unmatched vowels\r\n    .replaceAll(/([\\u1100-\\u115F])(?![\\u1160-\\u1175]|$)/gum, '$1\\u1160') // filler for unmatched initials\r\n    .replaceAll(/(?<![\\u1160-\\u1175])([\\u11A8-\\u11FF])/gum, '\\u115F\\u1160$1') // filler for unmatched finals\r\n    .normalize()\r\n  );\r\n}\r\n\r\n// NDS special characters\r\nfunction remapNDSSpecialCharacters(s: string) {\r\n  return s.search(/[\\u2460-\\u2487]/u) === -1 ? s : (s\r\n    .replaceAll('\\u2469', 'ᵉʳ') // Gen 5 superscript er\r\n    .replaceAll('\\u246A', 'ʳᵉ') // Gen 5 superscript re\r\n    .replaceAll('\\u246B', 'ʳ') // Gen 5 superscript r\r\n    .replaceAll('\\u2485', 'ᵉ') // Gen 5 superscript e\r\n  );\r\n}\r\n\r\n// 3DS special characters\r\nfunction remap3DSSpecialCharacters (s: string) {\r\n  return remapChineseChars(remapKoreanBraille(\r\n    s.search(/[\\uE000-\\uE0A8]/u) === -1 ? s : (s\r\n      // System\r\n      .replaceAll('\\uE000', 'Ⓐ') // A Button\r\n      .replaceAll('\\uE001', 'Ⓑ') // B Button\r\n      .replaceAll('\\uE002', 'Ⓧ') // X Button\r\n      .replaceAll('\\uE003', 'Ⓨ') // Y Button\r\n      .replaceAll('\\uE004', 'Ⓛ') // L Button\r\n      .replaceAll('\\uE005', 'Ⓡ') // R Button\r\n      .replaceAll('\\uE006', '✜') // Control Pad\r\n      .replaceAll('\\uE073', '🏠︎') // Home Button\r\n\r\n      // Pokémon private use\r\n      .replaceAll('\\uE08A', 'ᵉʳ') // Superscript er\r\n      .replaceAll('\\uE08B', 'ʳᵉ') // Superscript re\r\n      .replaceAll('\\uE08C', 'ʳ') // Superscript r\r\n      .replaceAll('\\uE092', '♥') // Halfwidth black heart suit\r\n      .replaceAll('\\uE09A', '♪') // Halfwidth eighth note\r\n      .replaceAll('\\uE0A6', 'ᵉ') // Superscript e\r\n\r\n      // ORAS Braille\r\n      .replaceAll('\\uE081', '.') // French period (dots-256) [UNUSED]\r\n      .replaceAll('\\uE082', ',') // French comma (dots-2) [UNUSED]\r\n      .replaceAll('\\uE083', '.') // Italian period (dots-256) [UNUSED]\r\n      .replaceAll('\\uE084', ',') // Italian comma (dots-2) [UNUSED]\r\n      .replaceAll('\\uE085', '.') // German period (dots-3)\r\n      .replaceAll('\\uE086', ',') // German comma (dots-2) [UNUSED]\r\n      .replaceAll('\\uE087', '.') // Spanish period (dots-3)\r\n      .replaceAll('\\uE088', ',') // Spanish comma (dots-2) [UNUSED]\r\n    )\r\n  ));\r\n}\r\n\r\n// Switch special characters\r\nfunction remapSwitchSpecialCharacters(s: string) {\r\n  return s.search(/[\\uE104\\uE300-\\uE31C]/u) === -1 ? s : (s\r\n    .replaceAll('\\uE104', '✨︎') // BDSP sparkles\r\n    .replaceAll('\\uE300', '$') // Pokémon Dollar\r\n    .replaceAll('\\uE301', 'A') // Unown A\r\n    .replaceAll('\\uE302', 'B') // Unown B\r\n    .replaceAll('\\uE303', 'C') // Unown C\r\n    .replaceAll('\\uE304', 'D') // Unown D\r\n    .replaceAll('\\uE305', 'E') // Unown E\r\n    .replaceAll('\\uE306', 'F') // Unown F\r\n    .replaceAll('\\uE307', 'G') // Unown G\r\n    .replaceAll('\\uE308', 'H') // Unown H\r\n    .replaceAll('\\uE309', 'I') // Unown I\r\n    .replaceAll('\\uE30A', 'J') // Unown J\r\n    .replaceAll('\\uE30B', 'K') // Unown K\r\n    .replaceAll('\\uE30C', 'L') // Unown L\r\n    .replaceAll('\\uE30D', 'M') // Unown M\r\n    .replaceAll('\\uE30E', 'N') // Unown N\r\n    .replaceAll('\\uE30F', 'O') // Unown O\r\n    .replaceAll('\\uE310', 'P') // Unown P\r\n    .replaceAll('\\uE311', 'Q') // Unown Q\r\n    .replaceAll('\\uE312', 'R') // Unown R\r\n    .replaceAll('\\uE313', 'S') // Unown S\r\n    .replaceAll('\\uE314', 'T') // Unown T\r\n    .replaceAll('\\uE315', 'U') // Unown U\r\n    .replaceAll('\\uE316', 'V') // Unown V\r\n    .replaceAll('\\uE317', 'W') // Unown W\r\n    .replaceAll('\\uE318', 'X') // Unown X\r\n    .replaceAll('\\uE319', 'Y') // Unown Y\r\n    .replaceAll('\\uE31A', 'Z') // Unown Z\r\n    .replaceAll('\\uE31B', '!') // Unown !\r\n    .replaceAll('\\uE31C', '?') // Unown ?\r\n  );\r\n}\r\n\r\n/**\r\n * Appends additional metadata to each string:\r\n * - For strings with ruby, appends copies of the strings with the ruby text converted to kana/kanji so that they can be searched.\r\n *   These copies are separated by `U+F0000` and `U+F0001` so that they can be stripped before display.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction preprocessMetadata(s: string) {\r\n  return s.search(/\\{[^|}]+\\|[^|}]+\\}/u) === -1 ? s : (\r\n    s.replaceAll(/^.*\\{[^|}]+\\|[^|}]+\\}.*$/gum, (line) => {\r\n      const lineKanji = line.replaceAll(/\\{([^|}]+)\\|[^|}]+\\}/gu, '$1');\r\n      const lineKana = line.replaceAll(/\\{[^|}]+\\|([^|}]+)\\}/gu, '$1');\r\n      return [line, '\\u{F0000}', lineKanji, '\\u{F0001}', lineKana].join('');\r\n    })\r\n  );\r\n}\r\n\r\n/**\r\n * Converts private use characters to the corresponding Unicode characters,\r\n * and adds additional searchable metadata.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction preprocessString(s: string) {\r\n  return preprocessMetadata(remapSwitchSpecialCharacters(remap3DSSpecialCharacters(remapNDSSpecialCharacters(s\r\n    // GCN\r\n    .replaceAll('[..]', '‥')\r\n    .replaceAll('[゛]', '゛')\r\n    .replaceAll('[゜]', '゜')\r\n    .replaceAll('[^er]', 'ᵉʳ')\r\n  ))));\r\n}\r\n\r\n/**\r\n * Converts escaped whitespace characters to literal whitespace characters, so that they are matched by `\\s` when using a regex search.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction convertWhitespace(s: string) {\r\n  return (s\r\n    .replaceAll('\\\\\\\\', '\\u{F0100}')\r\n    .replaceAll('\\\\n', '\\n')\r\n    .replaceAll('\\\\r', '\\r')\r\n    .replaceAll('\\\\c', '\\f')\r\n    .replaceAll('\\u{F0100}', '\\\\\\\\')\r\n  );\r\n}\r\n\r\n/**\r\n * Strips additional metadata from each string:\r\n * - Converted ruby text marked with `U+F0000` and `U+F0001`\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction postprocessMetadata(s: string) {\r\n  return s.split('\\u{F0000}')[0];\r\n}\r\n\r\nfunction multiLine(s: string) {\r\n  if (s.search(/[\\u{F1000}\\u{F1001}]/u) === -1) {\r\n    return s;\r\n  }\r\n  return ['<dl>', ...s.split('\\u{F1000}').map((line) => line.split('\\u{F1001}')).map(([location, str]) => `<dt>${location}</dt><dd>${str}</dd>`), '</dl>'].join('');\r\n}\r\n\r\n/**\r\n * Converts the male and female forms of a string to HTML, separated by a slash.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction genderBranch(male: string, female: string, neuter: string = '') {\r\n  const results = [];\r\n  if (male.length > 0) results.push(`<span class=\"branch male\">${male}</span>`);\r\n  if (female.length > 0) results.push(`<span class=\"branch female\">${female}</span>`);\r\n  if (neuter.length > 0) results.push(`<span class=\"branch neuter\">${neuter}</span>`);\r\n  return results.join('<span class=\"gender\">/</span>');\r\n}\r\n\r\n/**\r\n * Converts the singular and plural forms of a string to HTML, separated by a slash.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction numberBranch(singular: string, plural: string, zero: string = '') {\r\n  const results = [];\r\n  if (singular.length > 0) results.push(`<span class=\"branch singular\">${singular}</span>`);\r\n  if (plural.length > 0) results.push(`<span class=\"branch plural\">${plural}</span>`);\r\n  if (zero.length > 0) results.push(`<span class=\"branch zero\">${zero}</span>`);\r\n  return results.join('<span class=\"number\">/</span>');\r\n}\r\n\r\n/**\r\n * Converts the male singular, female singular, male plural, and female plural forms of a string to HTML, separated by a slash.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction genderNumberBranch(maleSingular: string, femaleSingular: string, malePlural: string, femalePlural: string) {\r\n  const singularResults = [];\r\n  if (maleSingular.length > 0) singularResults.push(`<span class=\"branch male singular\">${maleSingular}</span>`);\r\n  if (femaleSingular.length > 0) singularResults.push(`<span class=\"branch female singular\">${femaleSingular}</span>`);\r\n  const singular = singularResults.join('<span class=\"gender singular\">/</span>');\r\n\r\n  const pluralResults = [];\r\n  if (malePlural.length > 0) pluralResults.push(`<span class=\"branch male plural\">${malePlural}</span>`);\r\n  if (femalePlural.length > 0) pluralResults.push(`<span class=\"branch female plural\">${femalePlural}</span>`);\r\n  const plural = pluralResults.join('<span class=\"gender plural\">/</span>');\r\n\r\n  const classResults = ['number'];\r\n  if (maleSingular.length > 0 && malePlural.length > 0) classResults.push('male');\r\n  if (femaleSingular.length > 0 && femalePlural.length > 0) classResults.push('female');\r\n  const className = classResults.join(' ');\r\n  return [singular, plural].join(`<span class=\"${className}\">/</span>`);\r\n}\r\n\r\n/**\r\n * Converts the apocope forms of a string to HTML, separated by a slash.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction apocopeBranch(form1: string, form2: string) {\r\n  const results = [];\r\n  if (form1.length > 0) results.push(`<span class=\"branch apocope1\">${form1}</span>`);\r\n  if (form2.length > 0) results.push(`<span class=\"branch apocope2\">${form2}</span>`);\r\n  return results.join('<span class=\"apocope\">/</span>');\r\n}\r\n\r\n/**\r\n * Converts the version-specific forms of a string to HTML, separated by a slash.\r\n *\r\n * Returns the resulting string.\r\n */\r\nfunction versionBranch(form1: string, form2: string) {\r\n  const results = [];\r\n  if (form1.length > 0) results.push(`<span class=\"branch version1\">${form1}</span>`);\r\n  if (form2.length > 0) results.push(`<span class=\"branch version2\">${form2}</span>`);\r\n  return results.join('<span class=\"version\">/</span>');\r\n}\r\n\r\n/**\r\n * Converts the provided string to HTML by escaping `<` and `>`,\r\n * replacing line break control characters such as  `\\n` with `<br>`,\r\n * and converting the ruby syntax `{base|ruby}` to the corresponding HTML tags.\r\n *\r\n * Returns the resulting HTML string.\r\n */\r\nfunction postprocessString(s: string) {\r\n  return multiLine(postprocessMetadata(s)\r\n    // Replace special characters with a placeholder so they don't match other rules\r\n    .replaceAll('\\\\\\\\', '\\u{F0100}')\r\n    .replaceAll('\\\\[', '\\u{F0102}')\r\n    .replaceAll('\\\\{', '\\u{F0104}')\r\n    .replaceAll('<', '\\u{F0106}')\r\n    .replaceAll('>', '\\u{F0107}')\r\n\r\n    // Whitespace\r\n    .replaceAll('\\\\n', '\\u{F0200}')\r\n    .replaceAll('\\\\r', '\\u{F0201}')\r\n    .replaceAll('\\\\c', '\\u{F0202}')\r\n    .replaceAll('\\t', '\\u{F0203}')\r\n    .replaceAll('[VAR 0207]', '\\u{F0207}')\r\n    .replaceAll('[VAR 0208]', '\\u{F0208}')\r\n\r\n    // BDSP\r\n    .replaceAll(/\\u{F0106}color=(.*?)\\u{F0107}(.*?)\\u{F0106}\\/color\\u{F0107}/gu, '<span style=\"color: $1\">$2</span>') // color\r\n    .replaceAll(/\\u{F0106}size=(.*?)\\u{F0107}(.*?)\\u{F0106}\\/size\\u{F0107}/gu, '<span style=\"font-size: $1\">$2</span>') // size\r\n    .replaceAll(/((?<=^|[\\u{F0201}\\u{F0202}\\u{F0200}]).*?)\\u{F0106}pos=(.*?)\\u{F0107}(.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, '<span style=\"tab-size: $2\">$1\\t$3</span>') // pos\r\n    .replaceAll(/((?<=^|[\\u{F0201}\\u{F0202}\\u{F0200}]).*?)\\u{F0106}line-indent=(.*?)\\u{F0107}(.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, '<span style=\"tab-size: $2\">$1\\t$3</span>') // line-indent\r\n\r\n    .replaceAll('\\u2486', '<sup>P</sup><sub>K</sub>') // Gen 5 PK\r\n    .replaceAll('\\u2487', '<sup>M</sup><sub>N</sub>') // Gen 5 MN\r\n    .replaceAll('\\uE0A7', '<sup>P</sup><sub>K</sub>') // 3DS PK (unused)\r\n    .replaceAll('\\uE0A8', '<sup>M</sup><sub>N</sub>') // 3DS MN (unused)\r\n    .replaceAll(/\\[VAR FF01\\(FF43\\)\\]\\[VAR FF01\\(30B3\\)\\]/gu, '') // Gen 4 font size (empty string at 200%)\r\n    .replaceAll(/\\[VAR FF01\\(FF43\\)\\](.+?)(?:\\[VAR FF01\\(30B3\\)\\]|[\\u{F0201}\\u{F0202}\\u{F0200}]|$)/gu, '<span class=\"line-font-size-200\"><span class=\"text-font-size-200\">$1</span></span>') // Gen 4 font size (text at 200%)\r\n    .replaceAll('[VAR FF01(30B3)]', '') // Gen 4 font size (set to 100%)\r\n    .replaceAll(/((?<=^|[\\u{F0201}\\u{F0202}\\u{F0200}]).*?)\\[VAR 0203\\(..([0-9A-F]{2})\\)\\](.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, (_, before, size, after) => `<span style=\"tab-size: ${parseInt(size, 16)}pt\">${before}\\t${after}</span>`) // Gen 4 X coords\r\n    .replaceAll(/\\[VAR 0203\\(..([0-9A-F]{2})\\)\\]/gu, '\\t') // can't really have multiple tab sizes, so approximate the rest as tabs\r\n    .replaceAll(/\\[VAR 0204\\(..([0-9A-F]{2})\\)\\]/gu, (_, pad) => `<div style=\"height: ${parseInt(pad, 16)}pt\"></div>`) // Gen 4 Y coords\r\n    .replaceAll(/\\[VAR 0205\\](.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, '<span class=\"line-align-center\">$1</span>') // HGSS\r\n    .replaceAll(/\\[VAR 0206\\](.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, '<span class=\"line-align-right\">$1</span>') // HGSS\r\n    .replaceAll(/\\[VAR BD02\\](.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, '<span class=\"line-align-center\">$1</span>') // Gen 5+\r\n    .replaceAll(/\\[VAR BD03\\(([0-9A-F]{4})\\)\\](.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, (_, pad, text) => `<span class=\"line-align-right\" style=\"padding-right: ${parseInt(pad, 16)}pt\">${text}</span>`) // Gen 5+\r\n    .replaceAll(/\\[VAR BD04\\(([0-9A-F]{4})\\)\\](.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, (_, pad, text) => `<span class=\"line-align-left\" style=\"padding-left: ${parseInt(pad, 16)}pt\">${text}</span>`) // Gen 5+\r\n    .replaceAll(/((?<=^|[\\u{F0201}\\u{F0202}\\u{F0200}]).*?)\\[VAR BD05\\(..([0-9A-F]{2})\\)\\](.*?(?:[\\u{F0201}\\u{F0202}\\u{F0200}]|$)+)/gu, (_, before, size, after) => `<span style=\"tab-size: ${parseInt(size, 16)}pt\">${before}\\t${after}</span>`) // Gen 5 X coords\r\n    .replaceAll(/\\[VAR BD05\\(..([0-9A-F]{2})\\)\\]/gu, '\\t') // can't really have multiple tab sizes, so approximate the rest as tabs\r\n\r\n\r\n    // Line breaks\r\n    .replaceAll('\\u{F0207}\\u{F0200}', '<span class=\"c\">[VAR 0207]</span><span class=\"n\">\\\\n</span><br>') // [VAR 0207]\\n\r\n    .replaceAll('\\u{F0208}\\u{F0200}', '<span class=\"r\">[VAR 0208]</span><span class=\"n\">\\\\n</span><br>') // [VAR 0208]\\n\r\n    .replaceAll('\\u{F0201}\\u{F0200}', '<span class=\"r\">\\\\r</span><span class=\"n\">\\\\n</span><br>') // \\r\\n\r\n    .replaceAll('\\u{F0202}\\u{F0200}', '<span class=\"c\">\\\\c</span><span class=\"n\">\\\\n</span><br>') // \\c\\n\r\n\r\n    .replaceAll('\\u{F0207}', '<span class=\"c\">[VAR 0207]</span><br>') // [VAR 0207]\r\n    .replaceAll('\\u{F0208}', '<span class=\"r\">[VAR 0208]</span><br>') // [VAR 0208]\r\n    .replaceAll('\\u{F0201}', '<span class=\"r\">\\\\r</span><br>') // \\r\r\n    .replaceAll('\\u{F0202}', '<span class=\"c\">\\\\c</span><br>') // \\c\r\n    .replaceAll('\\u{F0200}', '<span class=\"n\">\\\\n</span><br>') // \\n\r\n\r\n    .replaceAll('\\u{F0203}', '<span class=\"tab\">\\t</span>')\r\n\r\n    // GCN\r\n    .replaceAll(/\\[unknown5_08_([0-9a-f]{2})_([0-9a-f]{2})_([0-9a-f]{2})_([0-9a-f]{2})\\](.*?)(?:\\[unknown5_08_ff_ff_ff_ff\\]|$|(?=\\u{F1000}))/gu, '<span style=\"color: #$1$2$3$4\">$5</span>')\r\n    .replaceAll('[Player]', '<span class=\"var\">[Player]</span>')\r\n    .replaceAll('[Player_alt]', '<span class=\"var\">[Player_alt]</span>')\r\n    .replaceAll('[Rui]', '<span class=\"var\">[Rui]</span>')\r\n    .replaceAll('[opp_trainer_class]', '<span class=\"var\">[opp_trainer_class]</span>')\r\n    .replaceAll('[opp_trainer_name]', '<span class=\"var\">[opp_trainer_name]</span>')\r\n    .replaceAll('[sent_out_pokemon_1]', '<span class=\"var\">[sent_out_pokemon_1]</span>')\r\n    .replaceAll('[sent_out_pokemon_2]', '<span class=\"var\">[sent_out_pokemon_2]</span>')\r\n    .replaceAll('[speechbubble]', '<span class=\"var\">[speechbubble]</span>')\r\n    .replaceAll('[bubble_or_speaker]', '<span class=\"var\">[bubble_or_speaker]</span>')\r\n    .replaceAll('[maybe_speaker_ID_toggle]', '<span class=\"var\">[maybe_speaker_ID_toggle]</span>')\r\n    .replaceAll('[maybe_location]', '<span class=\"var\">[maybe_location]</span>')\r\n    .replaceAll('[dialogue_end]', '<span class=\"var\">[dialogue_end]</span>')\r\n    .replaceAll('[large_e]', '<span class=\"var\">[large_e]</span>')\r\n    .replaceAll('[large_e+]', '<span class=\"var\">[large_e+]</span>')\r\n    .replaceAll('[furi_kanji]', '<span class=\"var\">[furi_kanji]</span>')\r\n    .replaceAll('[furi_kana]', '<span class=\"var\">[furi_kana]</span>')\r\n    .replaceAll('[furi_close]', '<span class=\"var\">[furi_close]</span>')\r\n    .replaceAll(/(\\[some_[^\\]]+?\\])/gu, '<span class=\"var\">$1</span>')\r\n    .replaceAll(/(\\[unknown[^\\]]+?\\])/gu, '<span class=\"var\">$1</span>')\r\n    .replaceAll(/(\\[var_[^\\]]\\])/gu, '<span class=\"var\">$1</span>')\r\n\r\n    .replaceAll('[NULL]', '<span class=\"null\">[NULL]</span>')\r\n    .replaceAll('[COMP]', '<span class=\"compressed\">[COMP]</span>')\r\n    .replaceAll(/\\[VAR (?:GENDBR|1100)\\([0-9A-F]{4},([0-9A-F]{2})([0-9A-F]{2})\\)\\]([^[<{]*)/gu, (_, lenF, lenM, rest) => {\r\n      const endM = parseInt(lenM, 16);\r\n      const endF = endM + parseInt(lenF, 16);\r\n      return `${genderBranch(rest.substring(0, endM), rest.substring(endM, endF))}${rest.substring(endF)}`;\r\n    })\r\n    .replaceAll(/\\[VAR (?:GENDBR|1100)\\([0-9A-F]{4},([0-9A-F]{2})([0-9A-F]{2}),00([0-9A-F]{2})\\)\\]([^[<{]*)/gu, (_, lenF, lenM, lenN, rest) => {\r\n      const endM = parseInt(lenM, 16);\r\n      const endF = endM + parseInt(lenF, 16);\r\n      const endN = endF + parseInt(lenN, 16);\r\n      return `${genderBranch(rest.substring(0, endM), rest.substring(endM, endF), rest.substring(endF, endN))}${rest.substring(endN)}`;\r\n    })\r\n    .replaceAll(/\\[VAR (?:NUMBRNCH|1101)\\([0-9A-F]{4},([0-9A-F]{2})([0-9A-F]{2})\\)\\]([^[<{]*)/gu, (_, lenP, lenS, rest) => {\r\n      const endS = parseInt(lenS, 16);\r\n      const endP = endS + parseInt(lenP, 16);\r\n      return `${numberBranch(rest.substring(0, endS), rest.substring(endS, endP))}${rest.substring(endP)}`;\r\n    })\r\n    .replaceAll(/\\[VAR (?:1102)\\([0-9A-F]{4},([0-9A-F]{2})([0-9A-F]{2}),([0-9A-F]{2})([0-9A-F]{2})\\)\\]([^[<{]*)/gu, (_, lenFS, lenMS, lenFP, lenMP, rest) => {\r\n      const endMS = parseInt(lenMS, 16);\r\n      const endFS = endMS + parseInt(lenFS, 16);\r\n      const endMP = endFS + parseInt(lenMP, 16);\r\n      const endFP = endMP + parseInt(lenFP, 16);\r\n      return `${genderNumberBranch(rest.substring(0, endMS), rest.substring(endMS, endFS), rest.substring(endFS, endMP), rest.substring(endMP, endFP))}${rest.substring(endFP)}`;\r\n    })\r\n    .replaceAll(/\\[VAR (?:1104|1106)\\([0-9A-F]{4},([0-9A-F]{2})([0-9A-F]{2})\\)\\]([^[<{]*)/gu, (_, len2, len1, rest) => {\r\n      const end1 = parseInt(len1, 16);\r\n      const end2 = end1 + parseInt(len2, 16);\r\n      return `${apocopeBranch(rest.substring(0, end1), rest.substring(end1, end2))}${rest.substring(end2)}`;\r\n    })\r\n    .replaceAll(/\\[VAR (?:1105)\\([0-9A-F]{4},([0-9A-F]{2})([0-9A-F]{2}),00([0-9A-F]{2})\\)\\]([^[<{]*)/gu, (_, lenP, lenS, lenZ, rest) => {\r\n      const endS = parseInt(lenS, 16);\r\n      const endP = endS + parseInt(lenP, 16);\r\n      const endZ = endP + parseInt(lenZ, 16);\r\n      return `${numberBranch(rest.substring(0, endS), rest.substring(endS, endP), rest.substring(endP, endZ))}${rest.substring(endZ)}`;\r\n    })\r\n    .replaceAll(/\\[VAR (?:1107)\\([0-9A-F]{4},([0-9A-F]{2})([0-9A-F]{2})\\)\\]([^[<{]*)/gu, (_, len2, len1, rest) => {\r\n      const end1 = parseInt(len1, 16);\r\n      const end2 = end1 + parseInt(len2, 16);\r\n      return `${versionBranch(rest.substring(0, end1), rest.substring(end1, end2))}${rest.substring(end2)}`;\r\n    })\r\n    .replaceAll(/\\[VAR 1[3-7A]00\\((?:tagParameter=\\d+,)?tagWordArray=([^[<{]*?)(?:\\|([^[<{]*?))?\\)\\]/gu, (_, male, female) => genderBranch(male, female ?? ''))\r\n    .replaceAll(/\\[VAR 1[3-7A]01\\((?:tagParameter=\\d+,)?tagWordArray=([^[<{]*?)(?:\\|([^[<{]*?))?\\)\\]/gu, (_, singular, plural) => numberBranch(singular, plural ?? ''))\r\n    .replaceAll(/\\[VAR 1[3-7A]02\\((?:tagParameter=\\d+,)?tagWordArray=([^[<{]*?)\\|([^[<{]*?)\\|([^[<{]*?)\\|([^[<{]*?)\\)\\]/gu, (_, maleSingular, femaleSingular, malePlural, femalePlural) => genderNumberBranch(maleSingular, femaleSingular, malePlural, femalePlural))\r\n    .replaceAll(/(\\[VAR [^\\]]+?\\])/gu, '<span class=\"var\">$1</span>')\r\n    .replaceAll(/(\\[WAIT [\\d.]+\\])/gu, '<span class=\"wait\">$1</span>')\r\n    .replaceAll(/(\\[SFX [\\d.]+\\])/gu, '<span class=\"sfx\">$1</span>') // BDSP\r\n    .replaceAll(/(\\[~ \\d+\\])/gu, '<span class=\"unused\">$1</span>')\r\n    .replaceAll(/\\{([^|}]+)\\|([^|}]+)\\}/gu, '<ruby>$1<rp>(</rp><rt>$2</rt><rp>)</rp></ruby>') // Switch furigana\r\n    .replaceAll(/(\\s+$)/gu, '<span class=\"whitespace-trailing\">$1</span>') // Trailing whitespace\r\n    .replaceAll(/(^\\s+)/gu, '<span class=\"whitespace-leading\">$1</span>') // Leading whitespace\r\n\r\n    // Speaker name\r\n    .replaceAll(/^(.+)\\u{F1100}(.+?)\\u{F1101}/gu, '<a class=\"speaker\" data-var=\"$1\">$2</a>')\r\n\r\n    // Replace placeholders with literal characters\r\n    .replaceAll('\\u{F0100}', '\\\\')\r\n    .replaceAll('\\u{F0102}', '[')\r\n    .replaceAll('\\u{F0104}', '{')\r\n    .replaceAll('\\u{F0106}', '&lt;')\r\n    .replaceAll('\\u{F0107}', '&gt;')\r\n  );\r\n}\r\n\r\nexport { preprocessString, convertWhitespace, postprocessString };\r\n","import corpusJson from '../res/corpus.json'\r\n\r\nexport interface Speaker {\r\n  readonly file: string,\r\n  readonly textFile: string\r\n}\r\n\r\nexport interface Collection {\r\n  readonly id?: string,                   // used for looking up a specific line by ID\r\n  readonly languages: readonly string[],  // available languages\r\n  readonly structured: boolean,           // true if lines are aligned between languages, false otherwise\r\n  readonly version?: string | {           // which version each language's files in the collection is from\r\n    [language: string]: string            // can be a string if the version number is the same between languages\r\n  },\r\n  readonly files: readonly string[],      // what files the collection contains\r\n  readonly speaker?: Speaker              // location of speaker names\r\n}\r\n\r\nexport interface Corpus {\r\n  hash: string,\r\n  readonly languages: readonly string[],\r\n  readonly collections: {\r\n    [collectionKey: string]: Collection\r\n  }\r\n}\r\n\r\nconst speakerDelimiters: {[language: string]: string} = {\r\n  'ja-Hrkt-JP': '『',\r\n  'ja-JP': '『',\r\n  'fr-FR': ' : ', // space before and after colon\r\n  'zh-CN': '\\uFF1A', // fullwidth colon\r\n  'zh-TW': '「'\r\n   // default: ': '\r\n};\r\n\r\nexport function speakerDelimiter(language: string) {\r\n  return speakerDelimiters[language] ?? ': ';\r\n}\r\n\r\nexport const corpus = corpusJson as Corpus;\r\nexport const cacheVersion = `corpus-${corpus.hash}`;\r\nexport default corpus;\r\n","import 'compression-streams-polyfill';\r\nimport { preprocessString, convertWhitespace, postprocessString } from './cleanString';\r\nimport { Speaker, speakerDelimiter, cacheVersion } from './corpus';\r\n\r\nexport interface SearchParams {\r\n  readonly query: string,\r\n  readonly regex: boolean,\r\n  readonly caseInsensitive: boolean,\r\n  readonly common: boolean,\r\n  readonly script: boolean,\r\n  readonly collections: readonly string[],\r\n  readonly languages: readonly string[]\r\n}\r\n\r\nexport interface SearchTask {\r\n  readonly index: number,\r\n  readonly params: SearchParams,\r\n  readonly collectionKey: string,\r\n  readonly fileKey: string,\r\n  readonly languages: readonly string[],\r\n  readonly speaker?: Speaker\r\n}\r\n\r\nexport type SearchTaskResultError = 'error' | 'regex' | 'network';\r\nexport type SearchTaskResultDone = 'done';\r\nexport type SearchTaskResultStatus = 'loading' | 'processing' | SearchTaskResultDone | SearchTaskResultError;\r\nexport interface SearchTaskResultLines {\r\n  readonly collection: string,\r\n  readonly file: string,\r\n  readonly languages: readonly string[],\r\n  readonly lines: readonly string[][]\r\n}\r\nexport interface SearchTaskResult {\r\n  readonly index: number,\r\n  readonly status: SearchTaskResultStatus,\r\n  readonly result?: SearchTaskResultLines\r\n}\r\nexport interface SearchTaskResultComplete {\r\n  readonly index: number,\r\n  readonly status: SearchTaskResultDone,\r\n  readonly result: SearchTaskResultLines\r\n}\r\n\r\n/* eslint-disable no-restricted-globals */\r\nself.onmessage = (task: MessageEvent<SearchTask>) => {\r\n  const {index, params, collectionKey, fileKey, languages, speaker} = task.data;\r\n  const notify = (status: SearchTaskResultStatus, result?: SearchTaskResultLines) => {\r\n    const message: SearchTaskResult = {\r\n      index: index,\r\n      status: status,\r\n      result: result\r\n    }\r\n    postMessage(message);\r\n  }\r\n\r\n  /**\r\n   * Attempts the following, in order:\r\n   * - Retrieving the file from the cache\r\n   * - Populating the cache with the file\r\n   * - Fetching the file directly\r\n   *\r\n   * Returns a promise of the text of the file.\r\n   */\r\n  const getFileFromCache = (collectionKey: string, languageKey: string, fileKey: string) => {\r\n    const url = process.env.PUBLIC_URL + `/corpus/${collectionKey}/${languageKey}_${fileKey}.txt.gz`;\r\n    return ('caches' in self ? caches.open(cacheVersion)\r\n    .then((cache) => cache.match(url).then(res => res\r\n      ?? cache.add(url).then(() => cache.match(url)).then(res => res\r\n        ?? fetch(url))))\r\n    .catch(() => fetch(url)) : fetch(url))\r\n    .catch((err) => {\r\n      console.error(err);\r\n      notify('network');\r\n      return null;\r\n    })\r\n    .then((res) => res === null ? '' :\r\n      res.blob().then((blob) => new Response(blob.stream().pipeThrough(new DecompressionStream('gzip'))).text()))\r\n    .then(preprocessString);\r\n  }\r\n\r\n  const re = params.regex ? new RegExp(params.query, params.caseInsensitive ? 'sui' : 'su') : null;\r\n  const matchCondition = (line: string): boolean => {\r\n    return (params.regex && re !== null && convertWhitespace(line).match(re) !== null)\r\n      || (!params.regex && !params.caseInsensitive && line.includes(params.query))\r\n      || (!params.regex && params.caseInsensitive && (line.toLowerCase().includes(params.query.toLowerCase()) || line.toUpperCase().includes(params.query.toUpperCase())));\r\n  };\r\n\r\n  try {\r\n    // Load files\r\n    const filePromises = languages.map((languageKey) => getFileFromCache(collectionKey, languageKey, fileKey).then((data) => [languageKey, data] as [string, string]));\r\n    filePromises.forEach((promise) => promise.then(() => notify('loading')).catch(() => {})); // for progress bar\r\n\r\n    // Process files\r\n    const processingFilePromises = filePromises.map((promise) => promise.then(([languageKey, data]) => {\r\n      const lines = data.split(/\\r\\n|\\n/);\r\n      const lineKeys: number[] = [];\r\n\r\n      // Check selected languages for lines that satisfy the query\r\n      if (params.languages.includes(languageKey)) {\r\n        lines.forEach((line, i) => {\r\n          if (matchCondition(line)) {\r\n            lineKeys.push(i);\r\n          }\r\n        });\r\n      }\r\n      return [languageKey, lineKeys, lines] as [string, number[], string[]];\r\n    }));\r\n    processingFilePromises.forEach((promise) => promise.then(() => notify('processing')).catch(() => {})); // for progress bar\r\n\r\n    // Load speakers\r\n    // Since all dialogue with speaker names are in the script file while the speaker names are in the common file, we always have to load it separately\r\n    const speakerPromises = (speaker === undefined) ? [] : languages.map((languageKey) =>\r\n      getFileFromCache(collectionKey, languageKey, speaker.file).then((data) => {\r\n        const lines = data.split(/\\r\\n|\\n/);\r\n        const start = lines.indexOf(`Text File : ${speaker.textFile}`) + 2;\r\n        const end = lines.indexOf('~~~~~~~~~~~~~~~', start);\r\n        return lines.slice(start, end);\r\n      })\r\n    );\r\n\r\n    // Filter only the lines that matched\r\n    Promise.all([Promise.all(processingFilePromises), Promise.all(speakerPromises)]).then(([processedFiles, speakers]) => {\r\n      const languageKeys: string[] = [];\r\n      const lineKeysSet: Set<number> = new Set();\r\n      const fileData: string[][] = [];\r\n\r\n      processedFiles.forEach(([languageKey, lineKeys, lines]) => {\r\n        languageKeys.push(languageKey);\r\n        lineKeys.forEach((i) => lineKeysSet.add(i));\r\n        fileData.push(lines);\r\n      });\r\n\r\n      const fileResults: string[][] = [];\r\n      const replaceSpeaker = (s: string, languageIndex: number) => speaker === undefined ? s : s.replace(/(.*?)(\\[VAR 0114\\(([0-9A-F]{4})\\)\\])(?:$|(?=\\u{F0000}))/u, (_, rest, tag, speakerIndexHex) => {\r\n        const speakerIndex = parseInt(speakerIndexHex, 16);\r\n        const speakerName = speakers[languageIndex][speakerIndex];\r\n        return `${tag.replaceAll('[', '\\\\[')}\\u{F1100}${speakerName}${speakerDelimiter(languages[languageIndex]) ?? ': '}\\u{F1101}${rest}`;\r\n      });\r\n      Array.from(lineKeysSet).sort((a, b) => a - b).forEach((i) => fileResults.push(fileData.map((lines, languageIndex) => postprocessString(replaceSpeaker(lines[i] ?? '', languageIndex)))));\r\n      notify('done', {\r\n        collection: collectionKey,\r\n        file: fileKey,\r\n        languages: languageKeys,\r\n        lines: fileResults,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      notify('error');\r\n    });\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n    notify('error');\r\n  }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [506], () => (__webpack_require__(287)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"a5f65bf8\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/poke-corpus/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t287: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkpoke_corpus\"] = self[\"webpackChunkpoke_corpus\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(506).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["remap3DSSpecialCharacters","s","search","Array","from","map","c","codePoint","codePointAt","undefined","chineseChars","join","remapChineseChars","replaceAll","_","initial","syllable","normalize","substring","final","match","split","remapKoreanBraille","preprocessString","line","lineKanji","lineKana","preprocessMetadata","remapSwitchSpecialCharacters","remapNDSSpecialCharacters","genderBranch","male","female","neuter","arguments","length","results","push","concat","numberBranch","singular","plural","zero","genderNumberBranch","maleSingular","femaleSingular","malePlural","femalePlural","singularResults","pluralResults","classResults","className","speakerDelimiters","corpus","corpusJson","cacheVersion","hash","self","onmessage","task","index","params","collectionKey","fileKey","languages","speaker","data","notify","status","result","postMessage","getFileFromCache","languageKey","url","process","caches","open","then","cache","res","add","fetch","catch","err","console","error","blob","Response","stream","pipeThrough","DecompressionStream","text","re","regex","RegExp","query","caseInsensitive","filePromises","forEach","promise","processingFilePromises","_ref","lines","lineKeys","includes","i","toLowerCase","toUpperCase","matchCondition","speakerPromises","file","start","indexOf","textFile","end","slice","Promise","all","_ref2","processedFiles","speakers","languageKeys","lineKeysSet","Set","fileData","_ref3","fileResults","replaceSpeaker","languageIndex","replace","rest","tag","speakerIndexHex","_speakerDelimiter","speakerIndex","parseInt","speakerName","language","_speakerDelimiters$la","speakerDelimiter","sort","a","b","_lines$i","location","str","multiLine","postprocessMetadata","before","size","after","pad","lenF","lenM","endM","endF","lenN","endN","lenP","lenS","endS","endP","lenFS","lenMS","lenFP","lenMP","endMS","endFS","endMP","endFP","len2","len1","end1","end2","form1","form2","apocopeBranch","lenZ","endZ","versionBranch","collection","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","f","e","chunkId","reduce","promises","u","miniCssF","o","obj","prop","prototype","hasOwnProperty","call","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next"],"sourceRoot":""}