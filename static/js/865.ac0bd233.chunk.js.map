{"version":3,"file":"static/js/865.ac0bd233.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","searchWorker.ts","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/get javascript chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","searchWorkerManager.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export type SearchParams = {\r\n  query: string,\r\n  regex: boolean,\r\n  caseInsensitive: boolean,\r\n  common: boolean,\r\n  script: boolean,\r\n  collections: string[],\r\n  languages: string[]\r\n};\r\n\r\nexport type SearchTask = {\r\n  index: number,\r\n  params: SearchParams,\r\n  collectionKey: string,\r\n  fileKey: string,\r\n  languages: string[]\r\n}\r\n\r\nexport type SearchTaskResult = {\r\n  index: number,\r\n  status: string,\r\n  resultLanguages?: string[],\r\n  result?: [string, string, string[][]]\r\n}\r\n\r\nexport const cacheVersion = \"v1\";\r\n\r\n/* eslint-disable no-restricted-globals */\r\nself.onmessage = (task: MessageEvent<SearchTask>) => {\r\n  //#region Helper functions\r\n  /**\r\n   * Attempts the following, in order:\r\n   * - Retrieving the file from the cache\r\n   * - Populating the cache with the file\r\n   * - Fetching the file directly\r\n   *\r\n   * Returns a promise of the text of the file.\r\n   */\r\n  const getFileFromCache = (collectionKey: string, languageKey: string, fileKey: string) => {\r\n    const url = process.env.PUBLIC_URL + `/corpus/${collectionKey}/${languageKey}_${fileKey}.txt`;\r\n    return caches.open(cacheVersion)\r\n    .then((cache) => cache.match(url).then(res => res\r\n      ?? cache.add(url).then(() => cache.match(url)).then(res => res\r\n        ?? fetch(url))))\r\n    .catch(() => fetch(url))\r\n    .then((res) => res.text())\r\n    .then(preprocessString);\r\n  }\r\n\r\n  // SMUSUM Chinese Pokémon names\r\n  const chineseChars = '蛋妙蛙种子草花小火龙恐喷杰尼龟卡咪水箭绿毛虫铁甲蛹巴大蝶独角壳针蜂波比鸟拉达烈雀嘴阿柏蛇怪皮丘雷穿山鼠王多兰娜后朗力诺可西六尾九胖丁超音蝠走路臭霸派斯特球摩鲁蛾地三喵猫老鸭哥猴暴蒂狗风速蚊香蝌蚪君泳士凯勇基胡腕豪喇叭芽口呆食玛瑙母毒刺拳石隆岩马焰兽磁合一葱嘟利海狮白泥舌贝鬼通耿催眠貘引梦人钳蟹巨霹雳电顽弹椰树嘎啦飞腿郎快头瓦双犀牛钻吉蔓藤袋墨金鱼星宝魔墙偶天螳螂迷唇姐击罗肯泰鲤普百变伊布边菊化盔镰刀翼急冻闪你哈克幻叶月桂竺葵锯鳄蓝立咕夜鹰芭瓢安圆丝蛛叉字灯笼古然咩羊茸美丽露才皇毽棉长手向日蜻蜓乌沼太阳亮黑暗鸦妖未知图腾果翁麒麟奇榛佛托土弟蝎钢千壶赫狃熊圈熔蜗猪珊瑚炮章桶信使翅戴加象顿Ⅱ惊鹿犬无畏战舞娃奶罐幸福公炎帝幼沙班洛亚凤时木守宫森林蜥蜴稚鸡壮跃狼纹直冲茧狩猎盾粉莲童帽乐河橡实鼻狡猾傲骨燕鸥莉奈朵溜糖雨蘑菇斗笠懒獭过动猿请假居忍面者脱妞吼爆幕下掌朝北优雅勾魂眼那恰姆落正拍负萤甜蔷薇溶吞牙鲨鲸驼煤炭跳噗晃斑颚蚁漠仙歌青绵七夕鼬斩饭匙鳅鲶虾兵螯秤念触摇篮羽丑纳飘浮泡隐怨影诅咒巡灵彷徨热带铃勃梭雪冰护豹珍珠樱空棘爱心哑属艾欧盖固坐祈代希苗台猛曼拿儿狸法师箱蟀勒伦琴含羞苞槌城结贵妇绅蜜女帕兹潜兔随卷耳魅东施铛响坦铜镜钟盆聒噪陆尖咬不良骷荧光霓虹自舔狂远Ｚ由卢席恩骑色霏莱谢米尔宙提主暖炒武刃丸剑探步哨约扒酷冷蚀豆鸽高雉幔庞滚蝙螺钉差搬运匠修建蟾蜍投摔打包保足蜈蚣车轮精根裙野蛮鲈混流氓红倒狒殿滑巾征哭具死神棺原肋始祖破灰尘索沫栗德单卵细胞造鹅倍四季萌哎呀败轻蜘坚齿组麻鳗宇烛幽晶斧嚏几何敏捷功夫父赤驹劈司令炸雄秃丫首恶燃烧毕云酋迪耶塔赛里狐呱贺掘彩蓓洁能鞘芳芙妮好鱿贼脚铠垃藻臂枪伞咚碎黏钥朽南瓜嗡哲裴格枭狙射炽咆哮虎漾壬笃啄铳少强锹农胜虻鬃弱坏驴仔重挽滴伪睡罩盗着竹疗环智挥猩掷胆噬堡爷参性：银伴陨枕戈谜拟Ｑ磨舵鳞杖璞・鸣哞鳍科莫迦虚吾肌费束辉纸御机夏蛋妙蛙種子草花小火龍恐噴傑尼龜卡咪水箭綠毛蟲鐵甲蛹巴大蝶獨角殼針蜂波比鳥拉達烈雀嘴阿柏蛇怪皮丘雷穿山鼠王多蘭娜后朗力諾可西六尾九胖丁超音蝠走路臭霸派斯特球摩魯蛾地三喵貓老鴨哥猴爆蒂狗風速蚊香蝌蚪君泳士凱勇基胡腕豪喇叭芽口呆食瑪瑙母毒刺拳石隆岩馬焰獸磁合一蔥嘟利海獅白泥舌貝鬼通耿催眠貘引夢人鉗蟹巨霹靂電頑彈椰樹嘎啦飛腿郎快頭瓦雙犀牛鑽吉蔓藤袋墨金魚星寶魔牆偶天螳螂迷唇姐擊羅肯泰鯉暴普百變伊布邊菊化盔鐮刀翼急凍閃你哈克幻葉月桂竺葵鋸鱷藍立咕夜鷹芭瓢安圓絲蛛叉字燈籠古然咩羊茸美麗露才皇毽棉長手向日蜻蜓烏沼太陽亮黑暗鴉妖未知圖騰果翁麒麟奇榛佛托土弟蠍鋼千壺赫狃熊圈熔蝸豬珊瑚炮章桶信使翅戴加象頓Ⅱ驚鹿犬無畏戰舞娃奶罐幸福公炎帝幼沙班洛亞鳳時木守宮森林蜥蜴稚雞壯躍狼紋直衝繭狩獵盾粉蓮童帽樂河橡實鼻狡猾傲骨燕鷗莉奈朵溜糖雨蘑菇斗笠懶獺過動猿請假居忍面者脫妞吼幕下掌朝北優雅勾魂眼那恰姆落正拍負螢甜薔薇溶吞牙鯊鯨駝煤炭跳噗晃斑顎蟻漠仙歌青綿七夕鼬斬飯匙鰍鯰蝦兵螯秤念觸搖籃羽醜納飄浮泡隱怨影詛咒巡靈彷徨熱帶鈴勃梭雪冰護豹珍珠櫻空棘愛心啞屬艾歐蓋固坐祈代希苗台猛曼拿兒狸法師箱蟀勒倫琴含羞苞槌城結貴婦紳蜜女帕茲潛兔隨捲耳魅東施鐺響坦銅鏡鐘盆聒噪陸尖咬不良骷光霓虹自舔狂遠Ｚ由盧席恩騎色霏萊謝米爾宙提主暖炒武刃丸劍探步哨約扒酷冷蝕豆鴿高雉幔龐滾蝙螺釘差搬運匠修建蟾蜍投摔打包保足蜈蚣車輪毬精根裙野蠻鱸混流氓紅倒狒殿滑巾徵哭具死神棺原肋始祖破灰塵索沫栗德單卵細胞造鵝倍四季萌哎呀敗輕蜘堅齒組麻鰻宇燭幽晶斧嚏幾何敏捷功夫父赤駒劈司令炸雄禿丫首惡燃燒畢雲酋迪耶塔賽里狐呱賀掘彩蓓潔能鞘芳芙妮好魷賊腳鎧垃藻臂槍傘咚碎黏鑰朽南瓜嗡哲裴格梟狙射熾咆哮虎漾壬篤啄銃少強鍬農勝虻鬃弱壞驢仔重挽滴偽睡罩盜著竹療環智揮猩擲膽噬堡爺參性：銀伴隕枕戈謎擬Ｑ磨舵鱗杖璞・鳴哞鰭科莫迦虛吾肌費束輝紙御機夏垒磊砰奥壘磊砰丑奧';\r\n  const remapChineseChars = (s: string) => {\r\n    return s.search(/[\\uE800-\\uEE26]/u) === -1 ? s : (\r\n      Array.from(s).map((c) => {\r\n        const codePoint = c.codePointAt(0);\r\n        return (codePoint !== undefined && codePoint >= 0xE800 && codePoint <= 0xEE26) ? chineseChars[codePoint - 0xE800] : c;\r\n      }).join('')\r\n    );\r\n  }\r\n\r\n  // ORAS Korean Braille\r\n  const remapKoreanBraille = (s: string) => {\r\n    return s.search(/[\\u1100-\\u11FF\\uE0C0-\\uE0C7]/u) === -1 ? s : (s\r\n      .replaceAll('\\uE0C0', '그래서') // geuraeseo\r\n      .replaceAll('\\uE0C1', '그러나') // geureona\r\n      .replaceAll('\\uE0C2', '그러면') // geureomyeon\r\n      .replaceAll('\\uE0C3', '그러므로') // geureomeuro\r\n      .replaceAll('\\uE0C4', '그런데') // geureonde\r\n      .replaceAll('\\uE0C5', '그') // UNUSED go\r\n      .replaceAll('\\uE0C6', '그리하여') // geurihayeo\r\n      .replaceAll('ᆨᅩ', '그리고') // geurigeo\r\n      .replaceAll('\\uE0C7ᄉ', 'ᄊ') // ss\r\n      .replaceAll('\\uE0C7ᄀ', 'ᄁ') // kk\r\n      .replaceAll('\\uE0C7ᄃ', 'ᄄ') // tt\r\n      .replaceAll('\\uE0C7ᄇ', 'ᄈ') // pp\r\n      .replaceAll('\\uE0C7ᄌ', 'ᄍ') // jj\r\n      .replaceAll('\\uE0C7', 'ᄉ') // unmatched double consonant\r\n      .replaceAll(/([\\u1100-\\u115F])([억옹울옥연운온언얼열인영을은])/gu, (_, initial: string, syllable: string) => initial + syllable.normalize(\"NFD\").substring(1)) // combine initial with abbreviations\r\n      .replaceAll(/([가나다마바사자카타파하])([\\u11A8-\\u11FF])/gu, (_, syllable: string, final: string) => syllable.normalize(\"NFD\") + final) // combine abbreviations with final\r\n      .replaceAll(/^[\\u1160-\\u1175]+$/gum, (match) => '\\u115F' + match.split('').join('\\u115F')) // filler for unmatched vowels in strings of unmatched vowels\r\n      .replaceAll(/(?<![\\u1100-\\u115F])([\\u1160-\\u1175])/gu, 'ᄋ$1') // add null initial to all other unmatched vowels\r\n      .replaceAll(/([\\u1100-\\u115F])(?![\\u1160-\\u1175]|$)/gum, '$1\\u1160') // filler for unmatched initials\r\n      .replaceAll(/(?<![\\u1160-\\u1175])([\\u11A8-\\u11FF])/gum, '\\u115F\\u1160$1') // filler for unmatched finals\r\n      .normalize()\r\n    );\r\n  }\r\n\r\n  // NDS special characters\r\n  const remapNDSSpecialCharacters = (s: string) => {\r\n    return s.search(/[\\u2460-\\u2487]/u) === -1 ? s : (s\r\n      .replaceAll('\\u2469', 'ᵉʳ') // Gen 5 superscript er\r\n      .replaceAll('\\u246A', 'ʳᵉ') // Gen 5 superscript re\r\n      .replaceAll('\\u246B', 'ʳ') // Gen 5 superscript r\r\n      .replaceAll('\\u2485', 'ᵉ') // Gen 5 superscript e\r\n    );\r\n  }\r\n\r\n  // 3DS special characters\r\n  const remap3DSSpecialCharacters = (s: string) => {\r\n    return remapChineseChars(remapKoreanBraille(\r\n      s.search(/[\\uE000-\\uE0A8]/u) === -1 ? s : (s\r\n        // System\r\n        .replaceAll('\\uE000', 'Ⓐ') // A Button\r\n        .replaceAll('\\uE001', 'Ⓑ') // B Button\r\n        .replaceAll('\\uE002', 'Ⓧ') // X Button\r\n        .replaceAll('\\uE003', 'Ⓨ') // Y Button\r\n        .replaceAll('\\uE004', 'Ⓛ') // L Button\r\n        .replaceAll('\\uE005', 'Ⓡ') // R Button\r\n        .replaceAll('\\uE006', '✜') // Control Pad\r\n        .replaceAll('\\uE073', '🏠︎') // Home Button\r\n\r\n        // Pokémon private use\r\n        .replaceAll('\\uE08A', 'ᵉʳ') // Superscript er\r\n        .replaceAll('\\uE08B', 'ʳᵉ') // Superscript re\r\n        .replaceAll('\\uE08C', 'ʳ') // Superscript r\r\n        .replaceAll('\\uE092', '♥') // Halfwidth eighth note\r\n        .replaceAll('\\uE09A', '♪') // Halfwidth eighth note\r\n        .replaceAll('\\uE0A6', 'ᵉ') // Superscript e\r\n\r\n        // ORAS Braille\r\n        .replaceAll('\\uE081', '.') // French period (dots-256) [UNUSED]\r\n        .replaceAll('\\uE082', ',') // French comma (dots-2) [UNUSED]\r\n        .replaceAll('\\uE083', '.') // Italian period (dots-256) [UNUSED]\r\n        .replaceAll('\\uE084', ',') // Italian comma (dots-2) [UNUSED]\r\n        .replaceAll('\\uE085', '.') // German period (dots-3)\r\n        .replaceAll('\\uE086', ',') // German comma (dots-2) [UNUSED]\r\n        .replaceAll('\\uE087', '.') // Spanish period (dots-3)\r\n        .replaceAll('\\uE088', ',') // Spanish comma (dots-2) [UNUSED]\r\n      )\r\n    ));\r\n  }\r\n\r\n  // Switch special characters\r\n  const remapSwitchSpecialCharacters = (s: string) => {\r\n    return s.search(/[\\uE300-\\uE31C]/u) === -1 ? s : (s\r\n      .replaceAll('\\uE300', '$') // Pokémon Dollar\r\n      .replaceAll('\\uE301', 'A') // Unown A\r\n      .replaceAll('\\uE302', 'B') // Unown B\r\n      .replaceAll('\\uE303', 'C') // Unown C\r\n      .replaceAll('\\uE304', 'D') // Unown D\r\n      .replaceAll('\\uE305', 'E') // Unown E\r\n      .replaceAll('\\uE306', 'F') // Unown F\r\n      .replaceAll('\\uE307', 'G') // Unown G\r\n      .replaceAll('\\uE308', 'H') // Unown H\r\n      .replaceAll('\\uE309', 'I') // Unown I\r\n      .replaceAll('\\uE30A', 'J') // Unown J\r\n      .replaceAll('\\uE30B', 'K') // Unown K\r\n      .replaceAll('\\uE30C', 'L') // Unown L\r\n      .replaceAll('\\uE30D', 'M') // Unown M\r\n      .replaceAll('\\uE30E', 'N') // Unown N\r\n      .replaceAll('\\uE30F', 'O') // Unown O\r\n      .replaceAll('\\uE310', 'P') // Unown P\r\n      .replaceAll('\\uE311', 'Q') // Unown Q\r\n      .replaceAll('\\uE312', 'R') // Unown R\r\n      .replaceAll('\\uE313', 'S') // Unown S\r\n      .replaceAll('\\uE314', 'T') // Unown T\r\n      .replaceAll('\\uE315', 'U') // Unown U\r\n      .replaceAll('\\uE316', 'V') // Unown V\r\n      .replaceAll('\\uE317', 'W') // Unown W\r\n      .replaceAll('\\uE318', 'X') // Unown X\r\n      .replaceAll('\\uE319', 'Y') // Unown Y\r\n      .replaceAll('\\uE31A', 'Z') // Unown Z\r\n      .replaceAll('\\uE31B', '!') // Unown !\r\n      .replaceAll('\\uE31C', '?') // Unown ?\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Appends additional metadata to each string:\r\n   * - For strings with ruby, appends copies of the strings with the ruby text converted to kana/kanji so that they can be searched.\r\n   *   These copies are separated by `U+F0000` and `U+F0001` so that they can be stripped before display.\r\n   *\r\n   * Returns the resulting string.\r\n   */\r\n  const preprocessMetadata = (s: string) => {\r\n    return s.search(/\\{[^|}]+\\|[^|}]+\\}/u) === -1 ? s : (\r\n      s.replaceAll(/^.*\\{[^|}]+\\|[^|}]+\\}.*$/gum, (line) => {\r\n        const lineKanji = line.replaceAll(/\\{([^|}]+)\\|[^|}]+\\}/gu, '$1');\r\n        const lineKana = line.replaceAll(/\\{[^|}]+\\|([^|}]+)\\}/gu, '$1');\r\n        return [line, '\\u{F0000}', lineKanji, '\\u{F0001}', lineKana].join('');\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Converts private use characters to the corresponding Unicode characters,\r\n   * and adds additional searchable metadata.\r\n   *\r\n   * Returns the resulting string.\r\n   */\r\n  const preprocessString = (s: string) => {\r\n    return preprocessMetadata(remapSwitchSpecialCharacters(remap3DSSpecialCharacters(remapNDSSpecialCharacters(s))));\r\n  }\r\n\r\n  /**\r\n   * Strips additional metadata from each string:\r\n   * - Converted ruby text marked with `U+F0000` and `U+F0001`\r\n   *\r\n   * Returns the resulting string.\r\n   */\r\n  const postprocessMetadata = (s: string) => {\r\n    return s.split('\\u{F0000}')[0];\r\n  }\r\n\r\n  /**\r\n   * Converts the provided string to HTML by escaping `<` and `>`,\r\n   * replacing line break control characters such as  `\\n` with `<br>`,\r\n   * and converting the ruby syntax `{base|ruby}` to the corresponding HTML tags.\r\n   *\r\n   * Returns the resulting HTML string.\r\n   */\r\n  const postprocessString = (s: string) => {\r\n    return (postprocessMetadata(s)\r\n      .replaceAll('<', '&lt;').replaceAll('>', '&gt;')\r\n      .replaceAll('\\u2486', '<sup>P</sup><sub>K</sub>') // Gen 5 PK\r\n      .replaceAll('\\u2487', '<sup>M</sup><sub>N</sub>') // Gen 5 MN\r\n      .replaceAll('\\uE0A7', '<sup>P</sup><sub>K</sub>') // 3DS PK\r\n      .replaceAll('\\uE0A8', '<sup>M</sup><sub>N</sub>') // 3DS MN\r\n      .replaceAll('\\\\r\\\\n', '<span class=\"r\">&#92;r</span><span class=\"n\">&#92;n</span><br>')\r\n      .replaceAll('\\\\c\\\\n', '<span class=\"c\">&#92;c</span><span class=\"n\">&#92;n</span><br>')\r\n      .replaceAll('\\\\r', '<span class=\"r\">&#92;r</span><br>')\r\n      .replaceAll('\\\\c', '<span class=\"c\">&#92;c</span><br>')\r\n      .replaceAll('\\\\n', '<span class=\"n\">&#92;n</span><br>')\r\n      .replaceAll('\\t', '<span class=\"tab\">\\t</span>')\r\n      .replaceAll('[NULL]', '<span class=\"null\">[NULL]</span>')\r\n      .replaceAll('[COMP]', '<span class=\"compressed\">[COMP]</span>')\r\n      .replaceAll(/(\\[VAR [0-9A-F]{4}(?:\\([0-9A-F]{4}(?:,[0-9A-F]{4})*\\))\\])/gu, '<span class=\"var\">$1</span>')\r\n      .replaceAll(/(\\[WAIT \\d+\\])/gu, '<span class=\"wait\">$1</span>')\r\n      .replaceAll(/(\\[~ \\d+\\])/gu, '<span class=\"unused\">$1</span>')\r\n      .replaceAll(/\\{([^|}]+)\\|([^|}]+)\\}/gu, '<ruby>$1<rp>(</rp><rt>$2</rt><rp>)</rp></ruby>') // Switch furigana\r\n      .replaceAll(/^(\\s+)$/gu, '<span class=\"whitespace\">$1</span>')\r\n    );\r\n  };\r\n  //#endregion\r\n\r\n  const {index, params, collectionKey, fileKey, languages} = task.data;\r\n  const notify = (status: string, resultLanguages?: string[], result?: [string, string, string[][]]) => {\r\n    const message: SearchTaskResult = {\r\n      index: index,\r\n      status: status,\r\n      resultLanguages: resultLanguages,\r\n      result: result\r\n    }\r\n    postMessage(message);\r\n  }\r\n\r\n  try {\r\n    // Load files\r\n    const filePromises = languages.map((languageKey) => getFileFromCache(collectionKey, languageKey, fileKey).then((data) => [languageKey, data] as [string, string]));\r\n    filePromises.forEach((promise) => promise.then(() => notify('loading'))); // for progress bar\r\n\r\n    // Process files\r\n    const re = params.regex ? new RegExp(params.query, params.caseInsensitive ? 'ui' : 'u') : null;\r\n    const matchCondition = (line: string): boolean => {\r\n      return (params.regex && re !== null && line.match(re) !== null)\r\n        || (!params.regex && !params.caseInsensitive && line.includes(params.query))\r\n        || (!params.regex && params.caseInsensitive && (line.toLowerCase().includes(params.query.toLowerCase()) || line.toUpperCase().includes(params.query.toUpperCase())));\r\n    }\r\n\r\n    // Check selected languages for lines that satisfy the query\r\n    const processingFilePromises = filePromises.map((promise) => promise.then(([languageKey, data]) => {\r\n      const lines = data.split(/\\r\\n|\\n/);\r\n      const lineKeys: number[] = [];\r\n      if (params.languages.includes(languageKey)) {\r\n        lines.forEach((line, i) => {\r\n          if (matchCondition(line)) {\r\n            lineKeys.push(i);\r\n          }\r\n        });\r\n      }\r\n      return [languageKey, lineKeys, lines] as [string, number[], string[]];\r\n    }));\r\n    processingFilePromises.forEach((promise) => promise.then(() => notify('processing'))); // for progress bar\r\n\r\n    // Filter only the lines that matched\r\n    Promise.all(processingFilePromises).then((processedFiles) => {\r\n      const languageKeys: string[] = [];\r\n      const lineKeysSet: Set<number> = new Set();\r\n      const fileData: string[][] = [];\r\n\r\n      processedFiles.forEach(([languageKey, lineKeys, lines]) => {\r\n        languageKeys.push(languageKey);\r\n        lineKeys.forEach((i) => lineKeysSet.add(i));\r\n        fileData.push(lines);\r\n      });\r\n\r\n      const fileResults: string[][] = [];\r\n      Array.from(lineKeysSet).sort((a, b) => a - b).forEach((i) => fileResults.push(fileData.map((lines) => postprocessString(lines[i] ?? ''))));\r\n      notify('done', languageKeys, [collectionKey, fileKey, fileResults]);\r\n    });\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n    notify('error');\r\n  }\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"527e9af2\" + \".chunk.js\";\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/poke-corpus/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t865: 1,\n\t443: 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","import corpus from './i18n/corpus.json'\r\nimport { SearchParams, SearchTask, SearchTaskResult, cacheVersion } from './searchWorker';\r\n\r\nexport type SearchResults = {\r\n  complete: boolean,\r\n  status: string,\r\n  progress: number,\r\n  resultsLanguages: string[][],\r\n  results: [string, string, string[][]][]\r\n};\r\n\r\n/* eslint-disable no-restricted-globals */\r\nself.onmessage = (message: MessageEvent<SearchParams>) => {\r\n  const progressPortionLoading = 0.49;\r\n  const progressPortionProcessing = 0.49;\r\n  const progressPortionCollecting = 0.01; // 0.01 for rendering\r\n\r\n  const updateStatusInProgress = (status: string, loadingProgress: number, processingProgress: number, collectingProgress: number) => {\r\n    const progress = loadingProgress * progressPortionLoading + processingProgress * progressPortionProcessing + collectingProgress * progressPortionCollecting;\r\n    const message: SearchResults = {\r\n      complete: false,\r\n      status: status,\r\n      progress: progress,\r\n      resultsLanguages: [],\r\n      results: []\r\n    };\r\n    postMessage(message);\r\n  };\r\n\r\n  const updateStatusComplete = (status: string, resultsLanguages: string[][] = [], results: [string, string, string[][]][] = []) => {\r\n    const message: SearchResults = {\r\n      complete: true,\r\n      status: status,\r\n      progress: 1.0,\r\n      resultsLanguages: resultsLanguages,\r\n      results: results\r\n    };\r\n    postMessage(message);\r\n  };\r\n\r\n  try {\r\n    const params = message.data;\r\n    updateStatusInProgress('loading', 0, 0, 0);\r\n\r\n    // Clear old caches\r\n    caches.keys().then((keyList) => Promise.all(keyList.filter((key) => key !== cacheVersion).map((key) => caches.delete(key))));\r\n\r\n    // Load files\r\n    let taskCount = 0;\r\n    const taskList: SearchTask[] = [];\r\n    Object.keys(corpus.collections).filter((collectionKey) => params.collections.includes(collectionKey)).forEach((collectionKey) => {\r\n      const collection = corpus.collections[collectionKey as keyof typeof corpus.collections];\r\n\r\n      // Do not process collection if it does not include any language being searched\r\n      if (params.languages.every((languageKey) => !collection.languages.includes(languageKey))) {\r\n        return;\r\n      }\r\n\r\n      // Load all files in all languages in the collection\r\n      collection.files\r\n      .filter((fileKey) => !((fileKey === 'common' && !params.common) || (fileKey === 'script' && !params.script)))\r\n      .forEach((fileKey) => {\r\n        taskList.push({\r\n          index: taskCount,\r\n          params: params,\r\n          collectionKey: collectionKey,\r\n          fileKey: fileKey,\r\n          languages: collection.languages\r\n        })\r\n        taskCount += collection.languages.length;\r\n      });\r\n    });\r\n\r\n    // Initialize helpers\r\n    let loadedCount = 0;\r\n    let processedCount = 0;\r\n    let collectedCount = 0;\r\n    const taskResults: SearchTaskResult[] = [];\r\n    const helpers: Worker[] = [];\r\n    const helperOnMessage = (e: MessageEvent<SearchTaskResult>) => {\r\n      const result = e.data;\r\n      if (result.status === 'loading') {\r\n        loadedCount++;\r\n        updateStatusInProgress('loading', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.log(`Loaded ${loadedCount}/${taskCount}`);\r\n        }\r\n      }\r\n      else if (result.status === 'processing') {\r\n        processedCount++;\r\n        updateStatusInProgress('processing', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.log(`Processed ${processedCount}/${taskCount}`);\r\n        }\r\n      }\r\n      else if (result.status === 'done') {\r\n        taskResults.push(result);\r\n        collectedCount++;\r\n        updateStatusInProgress('collecting', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.log(`Collected ${collectedCount}/${taskList.length}`);\r\n        }\r\n\r\n        // Send results\r\n        if (collectedCount === taskList.length) {\r\n          const resultsLanguages: string[][] = [];\r\n          const results: [string, string, string[][]][] = [];\r\n          taskResults.sort((a, b) => a.index - b.index);\r\n          taskResults.forEach((taskResult) => {\r\n            if (taskResult.resultLanguages !== undefined && taskResult.result !== undefined) {\r\n              resultsLanguages.push(taskResult.resultLanguages);\r\n              results.push(taskResult.result);\r\n            }\r\n          });\r\n          updateStatusComplete('done', resultsLanguages, results);\r\n          helpers.forEach((helper) => helper.terminate());\r\n        }\r\n      }\r\n      else if (result.status === 'error') {\r\n        updateStatusComplete('error');\r\n        helpers.forEach((helper) => helper.terminate());\r\n      }\r\n    }\r\n    const numWorkers = Math.min(taskList.length, (navigator.hardwareConcurrency - 2) || 4);\r\n    for (let i = 0; i < numWorkers; i++) {\r\n      const helper = new Worker(new URL(\"./searchWorker.ts\", import.meta.url));\r\n      helper.onmessage = helperOnMessage;\r\n      helpers.push(helper);\r\n    }\r\n    taskList.forEach((task, i) => {\r\n      helpers[i % helpers.length].postMessage(task);\r\n    })\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n    updateStatusComplete('error');\r\n  }\r\n};\r\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","err","o","minLen","n","prototype","toString","slice","constructor","name","from","test","TypeError","cacheVersion","self","onmessage","task","remap3DSSpecialCharacters","s","search","map","c","codePoint","codePointAt","undefined","join","remapChineseChars","replaceAll","_","initial","syllable","normalize","substring","final","match","split","remapKoreanBraille","preprocessString","line","lineKanji","lineKana","preprocessMetadata","remapSwitchSpecialCharacters","remapNDSSpecialCharacters","_task$data","data","index","params","collectionKey","fileKey","languages","notify","status","resultLanguages","result","postMessage","filePromises","languageKey","url","process","concat","caches","open","then","cache","res","add","fetch","catch","text","getFileFromCache","forEach","promise","re","regex","RegExp","query","caseInsensitive","processingFilePromises","_ref","_ref2","lines","lineKeys","includes","toLowerCase","toUpperCase","matchCondition","Promise","all","processedFiles","languageKeys","lineKeysSet","Set","fileData","_ref3","_ref4","fileResults","sort","a","b","_lines$i","postprocessMetadata","console","error","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","d","definition","key","defineProperty","enumerable","get","u","chunkId","obj","prop","hasOwnProperty","p","location","message","updateStatusInProgress","loadingProgress","processingProgress","collectingProgress","complete","progress","resultsLanguages","results","updateStatusComplete","arguments","keys","keyList","filter","delete","taskCount","taskList","corpus","collections","collection","every","files","common","script","loadedCount","processedCount","collectedCount","taskResults","helpers","helperOnMessage","e","taskResult","helper","terminate","numWorkers","Math","min","navigator","hardwareConcurrency","Worker","URL"],"sourceRoot":""}