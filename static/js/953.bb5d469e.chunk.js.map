{"version":3,"file":"static/js/953.bb5d469e.chunk.js","mappings":"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","sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../webpack/runtime/get javascript chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","searchWorkerManager.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"63a0fb00\" + \".chunk.js\";\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/poke-corpus/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t953: 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","import corpus from './i18n/corpus.json'\r\nimport { SearchParams, SearchTask, SearchTaskResult, SearchTaskResultComplete, SearchTaskResultError } from './searchWorker';\r\n\r\nexport type SearchResultsInProgress = 'loading' | 'processing' | 'collecting';\r\nexport type SearchResultsError = SearchTaskResultError | 'noMatch';\r\nexport type SearchResultsComplete = 'done' | SearchResultsError;\r\nexport type SearchResultsStatus = SearchResultsInProgress | SearchResultsComplete;\r\nexport interface SearchResultLines {\r\n  readonly collection: string,\r\n  readonly file: string,\r\n  readonly languages: readonly string[],\r\n  readonly lines: readonly string[][],\r\n  readonly displayHeader: boolean\r\n};\r\nexport interface SearchResults {\r\n  readonly complete: boolean,\r\n  readonly status: SearchResultsStatus,\r\n  readonly progress: number,\r\n  readonly results: readonly SearchResultLines[]\r\n};\r\n\r\n/* eslint-disable no-restricted-globals */\r\nself.onmessage = (message: MessageEvent<SearchParams>) => {\r\n  const progressPortionLoading = 0.49;\r\n  const progressPortionProcessing = 0.49;\r\n  const progressPortionCollecting = 0.01; // 0.01 for rendering\r\n\r\n  const updateStatusInProgress = (status: SearchResultsInProgress, loadingProgress: number, processingProgress: number, collectingProgress: number) => {\r\n    const progress = loadingProgress * progressPortionLoading + processingProgress * progressPortionProcessing + collectingProgress * progressPortionCollecting;\r\n    const message: SearchResults = {\r\n      complete: false,\r\n      status: status,\r\n      progress: progress,\r\n      results: []\r\n    };\r\n    postMessage(message);\r\n  };\r\n\r\n  const updateStatusComplete = (status: SearchResultsComplete, results: SearchResultLines[] = []) => {\r\n    const message: SearchResults = {\r\n      complete: true,\r\n      status: status,\r\n      progress: 1.0,\r\n      results: results\r\n    };\r\n    postMessage(message);\r\n  };\r\n\r\n  try {\r\n    const params = message.data;\r\n    updateStatusInProgress('loading', 0, 0, 0);\r\n\r\n    try {\r\n      if (params.regex) {\r\n        new RegExp(params.query, params.caseInsensitive ? 'ui' : 'u');\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(err);\r\n      updateStatusComplete('regex');\r\n      return;\r\n    }\r\n\r\n    // Load files\r\n    let taskCount = 0;\r\n    const taskList: SearchTask[] = [];\r\n    Object.keys(corpus.collections).filter((collectionKey) => params.collections.includes(collectionKey)).forEach((collectionKey) => {\r\n      const collection = corpus.collections[collectionKey as keyof typeof corpus.collections];\r\n\r\n      // Do not process collection if it does not include any language being searched\r\n      if (params.languages.every((languageKey) => !collection.languages.includes(languageKey))) {\r\n        return;\r\n      }\r\n\r\n      // Load all files in all languages in the collection\r\n      collection.files\r\n      .filter((fileKey) => !((fileKey === 'common' && !params.common) || (fileKey === 'script' && !params.script)))\r\n      .forEach((fileKey) => {\r\n        const languages = collection.structured ? collection.languages : collection.languages.filter((languageKey) => params.languages.includes(languageKey));\r\n        if (!collection.structured) {\r\n          languages.forEach((languageKey) => {\r\n            taskList.push({\r\n              index: taskCount,\r\n              params: params,\r\n              collectionKey: collectionKey,\r\n              fileKey: fileKey,\r\n              languages: [languageKey]\r\n            });\r\n          });\r\n        }\r\n        else {\r\n          taskList.push({\r\n            index: taskCount,\r\n            params: params,\r\n            collectionKey: collectionKey,\r\n            fileKey: fileKey,\r\n            languages: languages\r\n          });\r\n        }\r\n        taskCount += languages.length;\r\n      });\r\n    });\r\n    if (taskList.length === 0) {\r\n      updateStatusComplete('noMatch');\r\n      return;\r\n    }\r\n\r\n    // Initialize helpers\r\n    let loadedCount = 0;\r\n    let processedCount = 0;\r\n    let collectedCount = 0;\r\n    const taskResults: SearchTaskResultComplete[] = [];\r\n    const helpers: Worker[] = [];\r\n    const helperOnMessage = (e: MessageEvent<SearchTaskResult>) => {\r\n      const result = e.data;\r\n      if (result.status === 'loading') {\r\n        loadedCount++;\r\n        updateStatusInProgress('loading', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.debug(`Loaded ${loadedCount}/${taskCount}`);\r\n        }\r\n      }\r\n      else if (result.status === 'processing') {\r\n        processedCount++;\r\n        updateStatusInProgress('processing', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.debug(`Processed ${processedCount}/${taskCount}`);\r\n        }\r\n      }\r\n      else if (result.status === 'done') {\r\n        taskResults.push(result as SearchTaskResultComplete);\r\n        collectedCount++;\r\n        updateStatusInProgress('collecting', loadedCount/taskCount, processedCount/taskCount, collectedCount/taskList.length);\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n          console.debug(`Collected ${collectedCount}/${taskList.length}`);\r\n        }\r\n\r\n        // Send results\r\n        if (collectedCount === taskList.length) {\r\n          const results: SearchResultLines[] = [];\r\n          taskResults.sort((a, b) => a.index - b.index);\r\n          let lastCollection = '';\r\n          let lastFile = '';\r\n          taskResults.map((taskResults) => taskResults.result).forEach((result) => {\r\n            results.push({...result, displayHeader: result.collection !== lastCollection || result.file !== lastFile});\r\n            lastCollection = result.collection;\r\n            lastFile = result.file;\r\n          });\r\n\r\n          updateStatusComplete('done', results);\r\n          helpers.forEach((helper) => helper.terminate());\r\n        }\r\n      }\r\n      else { // error\r\n        updateStatusComplete(result.status);\r\n        helpers.forEach((helper) => helper.terminate());\r\n      }\r\n    }\r\n\r\n    // Start helpers\r\n    const numWorkers = Math.max(1, Math.min(taskList.length, (navigator.hardwareConcurrency || 4) - 2));\r\n    for (let i = 0; i < numWorkers; i++) {\r\n      const helper = new Worker(new URL(\"./searchWorker.ts\", import.meta.url));\r\n      helper.onmessage = helperOnMessage;\r\n      helpers.push(helper);\r\n    }\r\n    taskList.forEach((task, i) => {\r\n      helpers[i % helpers.length].postMessage(task);\r\n    });\r\n  }\r\n  catch (err) {\r\n    console.error(err);\r\n    updateStatusComplete('error');\r\n  }\r\n};\r\n"],"names":["__webpack_require__","_typeof","obj","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","m","u","chunkId","o","prop","hasOwnProperty","p","b","self","location","onmessage","message","updateStatusInProgress","status","loadingProgress","processingProgress","collectingProgress","postMessage","complete","progress","results","updateStatusComplete","params","data","regex","RegExp","query","caseInsensitive","err","console","error","taskCount","taskList","corpus","collectionKey","collections","includes","collection","languages","every","languageKey","files","fileKey","common","script","structured","index","loadedCount","processedCount","collectedCount","taskResults","helpers","helperOnMessage","e","result","sort","a","lastCollection","lastFile","map","_objectSpread","displayHeader","file","helper","terminate","numWorkers","Math","max","min","navigator","hardwareConcurrency","Worker","URL","task"],"sourceRoot":""}