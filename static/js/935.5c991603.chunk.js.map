{"version":3,"file":"static/js/935.5c991603.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/fflate/esm/browser.js","../node_modules/compression-streams-polyfill/esm/ponyfill.mjs","../node_modules/compression-streams-polyfill/esm/index.mjs"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new u8(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            if (split) {\n                this.b.set(chunk.subarray(0, split), this.s.z);\n                this.s.z = this.b.length;\n                this.p(this.b, false);\n            }\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            if (this.p.length)\n                this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this_1 = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, function (offset) { return _this_1.onmember && _this_1.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.o = StrmOpt.call(this, opts, cb) || {};\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_2 = this;\n                // enables reuse of this method by AsyncDecompress\n                var cb = function () { _this_2.ondata.apply(_this_2, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o, cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o, cb)\n                        : new this.Z(this.o, cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        Decompress.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","import { AsyncDeflate, AsyncGzip, AsyncZlib, AsyncInflate, AsyncGunzip, AsyncUnzlib } from 'fflate';\nconst compressors = {\n    'gzip': AsyncGzip,\n    'deflate': AsyncZlib,\n    'deflate-raw': AsyncDeflate\n};\nconst decompressors = {\n    'gzip': AsyncGunzip,\n    'deflate': AsyncUnzlib,\n    'deflate-raw': AsyncInflate\n};\nconst makeMulti = (TransformStreamBase, processors, name) => {\n    class BaseCompressionStream extends TransformStreamBase {\n        constructor(format) {\n            if (!arguments.length) {\n                throw new TypeError(`Failed to construct '${name}': 1 argument required, but only 0 present.`);\n            }\n            const Processor = processors[format];\n            if (!Processor) {\n                throw new TypeError(`Failed to construct '${name}': Unsupported compression format: '${format}'`);\n            }\n            let compressor = new Processor();\n            let cb;\n            super({\n                start: controller => {\n                    compressor.ondata = (err, dat, final) => {\n                        if (err)\n                            controller.error(err);\n                        else if (dat) {\n                            controller.enqueue(dat);\n                            if (final)\n                                controller.terminate();\n                        }\n                        cb();\n                    };\n                },\n                transform: chunk => new Promise(resolve => {\n                    cb = resolve;\n                    if (chunk instanceof ArrayBuffer)\n                        chunk = new Uint8Array(chunk);\n                    else if (ArrayBuffer.isView(chunk)) {\n                        chunk = new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n                    }\n                    else {\n                        throw new TypeError(\"The provided value is not of type '(ArrayBuffer or ArrayBufferView)'\");\n                    }\n                    compressor.push(chunk);\n                }),\n                flush: () => new Promise(resolve => {\n                    cb = resolve;\n                    compressor.push(new Uint8Array(0), true);\n                })\n            }, {\n                size: chunk => chunk.byteLength | 0,\n                highWaterMark: 65536\n            });\n        }\n    }\n    return BaseCompressionStream;\n};\nexport function makeCompressionStream(TransformStreamBase) {\n    class CompressionStream extends makeMulti(TransformStreamBase, compressors, 'CompressionStream') {\n    }\n    return CompressionStream;\n}\nexport function makeDecompressionStream(TransformStreamBase) {\n    class DeompressionStream extends makeMulti(TransformStreamBase, decompressors, 'DecompressionStream') {\n    }\n    return DeompressionStream;\n}\n","import { makeCompressionStream, makeDecompressionStream } from './ponyfill.mjs';\nconst globals = typeof globalThis == 'undefined'\n    ? typeof self == 'undefined'\n        ? typeof global == 'undefined'\n            ? {}\n            : global\n        : self\n    : globalThis;\nif (typeof globals.CompressionStream == 'undefined') {\n    globals.CompressionStream = makeCompressionStream(TransformStream);\n}\nif (typeof globals.DecompressionStream == 'undefined') {\n    globals.DecompressionStream = makeDecompressionStream(TransformStream);\n}\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithHoles","isArray","_iterableToArrayLimit","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","Object","done","push","value","err","_nonIterableRest","TypeError","_slicedToArray","_unsupportedIterableToArray","o","minLen","n","prototype","toString","slice","constructor","name","from","test","_typeof","obj","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","String","Number","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","_classCallCheck","instance","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","result","Super","NewTarget","this","arguments","apply","ch2","u8","Uint8Array","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","start","b","r","j","_a","fl","revfl","_b","fd","revfd","rev","x","hMap","cd","mb","s","l","co","le","rvb","sv","r_1","v","m","flt","fdt","flm","flrm","fdm","fdrm","max","a","bits","d","bits16","shft","slc","set","subarray","ec","ind","msg","nt","Error","code","captureStackTrace","inflt","dat","st","buf","dict","sl","dl","f","noBuf","noSt","cbuf","bl","nbuf","Math","final","pos","bt","lm","dm","lbt","dbt","tbts","type","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","c","lt","dt","lms","dms","lpos","sym","add","dsym","end","shift","dend","min","wbits","wbits16","hTree","t2","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","w","clen","cf","wfblk","out","wblk","syms","lf","df","li","bs","dlt","mlb","ddt","mdb","_c","lclt","nlc","lcdt","ndc","lcfreq","lct","mlcb","nlcc","ll","flen","ftlen","dtlen","llm","lcts","it","clct","dst","deo","dflt","lvl","plvl","pre","post","z","ceil","lst","opt","msk_1","prev","head","h","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","maxd","ml","nl","mmd","md","ti","lin","din","crct","k","crc","cr","adler","dopt","dictionary","newDat","level","mem","log","mrg","wcln","fn","fnStr","td","ks","indexOf","lastIndexOf","replace","split","st_1","spInd","ch","wrkr","fns","init","id","cb","td_1","transfer","Worker","URL","createObjectURL","Blob","onmessage","data","ed","$e$","stack","postMessage","wk","buffer","cbfs","bInflt","inflateSync","pbf","gopt","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zls","size","astrm","strm","ondata","ev","astrmify","opts","ext","terminate","filename","mtime","floor","Date","now","charCodeAt","flg","zs","lv","StrmOpt","Deflate","chunk","endLen","newBuf","AsyncDeflate","Inflate","bts","AsyncInflate","Gzip","raw","AsyncGzip","Gunzip","onmember","AsyncGunzip","_this_1","offset","Zlib","AsyncZlib","Unzlib","AsyncUnzlib","TextDecoder","decode","stream","queueMicrotask","setTimeout","compressors","decompressors","makeMulti","TransformStreamBase","processors","BaseCompressionStream","_TransformStreamBase","_super","format","concat","Processor","compressor","controller","error","enqueue","transform","Promise","resolve","ArrayBuffer","isView","byteOffset","byteLength","flush","highWaterMark","globals","globalThis","global","CompressionStream","_makeMulti","_super2","makeCompressionStream","TransformStream","DecompressionStream","DeompressionStream","_makeMulti2","_super3","makeDecompressionStream"],"sourceRoot":""}